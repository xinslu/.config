local function theme_setup()
    local p = {
        color0 = "#232a2d",
        color1 = "#e57474",
        color2 = "#84a98c",
        color3 = "#e5c76b",
        color4 = "#8ecae6",
        color5 = "#bdb2ff",
        color6 = "#6cbfbf",
        color7 = "#b3b9b8",
        color8 = "#2d3437",
        color9 = "#e63946",
        color10 = "#96d988",
        color11 = "#f4d67a",
        color12 = "#77e0bf",
        color13 = "#fec89a",
        color14 = "#7798E0",
        color15 = "#f39660",
        color16 = "#fc5d7c",
        color17 = "#5a5d61",
        color18 = "#292e42",

        comment = "#404749",
        black = "#000000",

        grey = "#404040",

        bg = "#0e0e0e",
        bg1 = "#202020",
        bg2 = "#141414",
        bg3 = "#181818",
        bg4 = "#272727",
        bg5 = "#121212",

        foreground = "#dadada",
        none = "NONE",
    }


    local highlights = {
        -- Base highlights
        Boolean = { fg = p.color5 },
        Character = { fg = p.color12 },
        ColorColumn = { bg = p.none },
        Comment = { fg = p.comment, style = { italic = true } },
        Conceal = { fg = p.color4, bg = p.bg },
        Conditional = { fg = p.color6 },
        Constant = { fg = p.color5 },
        Cursor = { fg = p.foreground, bg = p.foreground },
        CurSearch = { link = "IncSearch" },
        CursorColumn = { bg = p.bg },
        CursorIM = { fg = p.foreground, bg = p.foreground },
        CursorLine = { bg = p.bg3 },
        CursorLineNr = { fg = p.foreground },
        Debug = { fg = p.color1 },
        Define = { fg = p.color6 },
        Delimiter = { fg = p.foreground },
        DiffAdd = { fg = p.color4, bg = p.bg },
        DiffChange = { fg = p.color5, bg = p.bg },
        DiffDelete = { fg = p.color1, bg = p.bg },
        DiffText = { fg = p.color1, bg = p.bg },
        Directory = { fg = p.color4 },
        EndOfBuffer = { fg = p.bg },
        Error = { fg = p.color1, bg = p.bg },
        ErrorMsg = { fg = p.color1, bg = p.bg },
        Exception = { fg = p.color6 },
        Float = { fg = p.color5 },
        FloatBorder = { fg = p.color17 },
        FoldColumn = { fg = p.color4, bg = p.bg },
        Folded = { fg = p.grey, bg = p.bg2 },
        Function = { fg = p.color6 },
        Identifier = { fg = p.color5 },
        Ignore = { fg = p.color7, bg = p.bg },
        IncSearch = { fg = p.black, bg = p.color10 },
        Include = { fg = p.color6 },
        Keyword = { fg = p.color6, style = { italic = true } },
        Label = { fg = p.color4 },
        LineNr = { fg = p.color8 },
        Macro = { fg = p.color6 },
        MatchParen = { fg = p.color4, bg = p.bg },
        ModeMsg = { fg = p.foreground, bg = p.bg },
        MoreMsg = { fg = p.color5 },
        MsgArea = { fg = p.foreground, bg = p.bg },
        MsgSeparator = { fg = p.foreground, bg = p.bg },
        NonText = { fg = p.color1 },
        Normal = { fg = p.foreground, bg = p.bg },
        NormalFloat = { bg = p.bg3 },
        NormalNC = { fg = p.foreground, bg = p.bg },
        Number = { fg = p.color3 },
        Operator = { fg = p.color6 },
        Pmenu = { bg = p.bg3 },
        PmenuSbar = { bg = p.bg4 },
        PmenuSel = { fg = p.black, bg = p.color4 },
        PmenuThumb = { bg = p.bg1 },
        PreCondit = { fg = p.color6 },
        PreProc = { fg = p.color6 },
        Question = { fg = p.color5 },
        QuickFixLine = { bg = p.color2 },
        Repeat = { fg = p.color6 },
        Search = { fg = p.black, bg = p.color4 },
        SignColumn = { fg = p.bg, bg = p.bg },
        Special = { fg = p.color6 },
        SpecialChar = { fg = p.foreground },
        SpecialComment = { fg = p.color2 },
        SpecialKey = { fg = p.color4 },
        SpellBad = { fg = p.color2 },
        SpellCap = { fg = p.color6 },
        SpellLocal = { fg = p.color4 },
        SpellRare = { fg = p.color6 },
        Statement = { fg = p.color6 },
        StatusLine = { fg = p.color2, bg = p.bg },
        StatusLineNC = { bg = p.color2, fg = p.bg },
        Storage = { fg = p.color9 },
        StorageClass = { fg = p.color7 },
        String = { fg = p.color2 },
        Structure = { fg = p.color6 },
        Substitute = { fg = p.black, bg = p.color9 },
        TabLine = { fg = p.color2, bg = p.bg },
        TabLineFill = { fg = p.foreground, bg = p.bg4 },
        TabLineSel = { fg = p.foreground, bg = p.bg },
        TabLineInactive = { fg = p.grey, bg = p.bg1 },
        Tag = { fg = p.color4 },
        TermCursor = { fg = p.foreground, bg = p.foreground },
        TermCursorNC = { fg = p.foreground, bg = p.foreground },
        Title = { fg = p.color4, bold = true },
        Todo = { fg = p.color1, bg = p.bg },
        Type = { fg = p.color5 },
        Typedef = { fg = p.color6 },
        Underlined = { fg = p.color2, underline = true },
        Variable = { fg = p.color5 },
        VertSplit = { fg = p.color0 },
        Visual = { bg = p.bg3 },
        VisualNOS = { bg = p.bg },
        WarningMsg = { fg = p.color3, bg = p.bg },
        Whitespace = { fg = p.grey },
        WildMenu = { fg = p.color7, bg = p.color4 },
        lCursor = { fg = p.foreground, bg = p.foreground },

        -- Diagnostic
        DiagnosticError = { fg = p.color1 },
        DiagnosticHint = { fg = p.color2 },
        DiagnosticInfo = { fg = p.color4 },
        DiagnosticWarn = { fg = p.color3 },
        DiagnosticUnnecessary = { fg = p.none },

        -- diff
        diffAdded = { fg = p.color4 },
        diffChanged = { fg = p.color5 },
        diffFile = { fg = p.color7 },
        diffIndexLine = { fg = p.color6 },
        diffLine = { fg = p.color1 },
        diffNewFile = { fg = p.color5 },
        diffOldFile = { fg = p.color5 },
        diffRemoved = { fg = p.color1 },

        -- LSP
        LspInfoFiletype = { fg = p.color15 },
        LspReferenceText = { bg = p.color18 },
        LspReferenceRead = { bg = p.color18 },
        LspReferenceWrite = { bg = p.color18 },
        LspInfoBorder = { link = "FloatBorder" },

        -- Neovim
        healthError = { fg = p.color1 },
        healthSuccess = { fg = p.color4 },
        healthWarning = { fg = p.color5 },

        -- nvim-cmp: https://github.com/hrsh7th/nvim-cmp
        CmpDocumentationBorder = { fg = p.color17, bg = p.bg },
        CmpItemAbbr = { fg = p.foreground, bg = p.bg3 },
        CmpItemAbbrDeprecated = { fg = p.color2, bg = p.bg3 },
        CmpItemAbbrMatch = { fg = p.color15, bg = p.bg3 },
        CmpItemAbbrMatchFuzzy = { fg = p.color15, bg = p.bg3 },
        CmpItemKind = { fg = p.color4, bg = p.bg3 },
        CmpItemMenu = { fg = p.color2, bg = p.bg3 },
        CmpItemKindFolder = { fg = p.color4 },
        CmpItemKindFile = { fg = p.color2 },
        CmpItemKindConstructor = { fg = p.color5 },
        CmpItemKindInterface = { fg = p.color5 },
        CmpItemKindReference = { fg = p.color5 },
        CmpItemKindConstant = { fg = p.color5 },
        CmpItemKindProperty = { fg = p.color5 },
        CmpItemKindModule = { fg = p.color5 },
        CmpItemKindClass = { fg = p.color5 },
        CmpItemKindField = { fg = p.color5 },
        CmpItemKindEvent = { fg = p.color5 },
        CmpItemKindSnippet = { fg = p.color4 },
        CmpItemKindKeyword = { fg = p.color4 },
        CmpItemKindValue = { fg = p.color4 },
        CmpItemKindOperator = { fg = p.color4 },
        CmpItemKindTypeParameter = { fg = p.color7 },
        CmpItemKindVariable = { fg = p.color7 },
        CmpItemKindText = { fg = p.color7 },
        CmpItemKindUnit = { fg = p.color7 },

        -- Yank
        YankHighlight = { bg = p.bg3 },

        -- Markdown
        markdownCodeBlock = { fg = p.color7 },
        markdownCodeDelimeter = { fg = p.color7 },
        markdownUrl = { fg = p.color15 },
        markdownLink = { fg = p.foreground, underline = true },

        -- nvim-treesitter: https://github.com/nvim-treesitter/nvim-treesitter
        ["@attribute"] = { fg = p.color4 },
        ["@boolean"] = { fg = p.color6 },
        ["@character"] = { fg = p.color4 },
        ["@comment"] = { fg = p.comment, style = { italic = true } },
        ["@conditional"] = { fg = p.color1 },
        ["@constant"] = { fg = p.color6 },
        ["@constant.builtin"] = { fg = p.color12 },
        ["@constant.macro"] = { fg = p.color3 },
        ["@constructor"] = { fg = p.color12 },
        ["@exception"] = { fg = p.color1 },
        ["@field"] = { fg = p.color1 },
        ["@float"] = { link = "@number" },
        ["@function"] = { fg = p.color6 },
        ["@function.builtin"] = { fg = p.color6 },
        ["@function.macro"] = { fg = p.color2 },
        ["@include"] = { fg = p.color4 },
        ["@keyword"] = { fg = p.color14, style = { italic = true } },
        ["@keyword.function"] = { fg = p.color14 },
        ["@keyword.operator"] = { fg = p.color14 },
        ["@keyword.return"] = { fg = p.color14 },
        ["@label"] = { fg = p.color12 },
        ["@method"] = { fg = p.color12 },
        ["@namespace"] = { fg = p.color13 },
        ["@number"] = { fg = p.color15 },
        ["@operator"] = { fg = p.color3 },
        ["@parameter"] = { fg = p.color1 },
        ["@parameter.reference"] = { fg = p.color9 },
        ["@property"] = { fg = p.color2 },
        ["@punctuation.bracket"] = { fg = p.color7 },
        ["@punctuation.delimiter"] = { fg = p.color7 },
        ["@punctuation.special"] = { fg = p.color7 },
        ["@repeat"] = { fg = p.color13 },
        ["@string"] = { fg = p.color14 },
        ["@string.escape"] = { fg = p.color4 },
        ["@string.regex"] = { fg = p.color14 },
        ["@string.special"] = { fg = p.color4 },
        ["@symbol"] = { fg = p.color1 },
        ["@tag"] = { fg = p.color4 },
        ["@tag.attribute"] = { fg = p.color1 },
        ["@tag.delimiter"] = { fg = p.color7 },
        ["@text"] = { fg = p.color7 },
        ["@text.danger"] = { fg = p.color8 },
        ["@text.emphasis"] = { fg = p.color7, italic = true },
        ["@text.environment.name"] = { fg = p.color3 },
        ["@text.environtment"] = { fg = p.color5 },
        ["@text.literal"] = { fg = p.color2, italic = true },
        ["@text.math"] = { fg = p.color6 },
        ["@text.note"] = { fg = p.black, bg = p.color2 },
        ["@text.reference"] = { fg = p.color6 },
        ["@text.strike"] = { fg = p.color7, strikethrough = true },
        ["@text.strong"] = { fg = p.color7, bold = true },
        ["@text.title"] = { fg = p.color3, bold = true },
        ["@text.underline"] = { fg = p.color5, underline = true },
        ["@text.uri"] = { fg = p.color3, underline = true },
        ["@text.warning"] = { fg = p.color0, bg = p.color1 },
        ["@type"] = { fg = p.color4 },
        ["@type.builtin"] = { fg = p.color4 },
        ["@storageclass"] = { link = "@keyword" },
        ["@type.qualifier"] = { link = "@keyword" },
        ["@variable"] = { fg = p.foreground },
        ["@variable.builtin"] = { link = "@keyword" },

        -- LSP semantic tokens
        ["@lsp.type.comment"] = { link = "@comment" },
        ["@lsp.type.type"] = { link = "@type" },
        ["@lsp.type.class"] = { link = "@type" },
        ["@lsp.type.enum"] = { link = "@type" },
        ["@lsp.type.interface"] = { link = "Identifier" },
        ["@lsp.type.keyword"] = { link = "@keyword" },
        ["@lsp.type.namespace"] = { link = "@namespace" },
        ["@lsp.type.parameter"] = { link = "@parameter" },
        ["@lsp.type.property"] = { link = "@property" },
        ["@lsp.type.variable"] = { link = "@variable" }, -- use treesitter styles for regular variables
        ["@lsp.typemod.method.defaultLibrary"] = { link = "@function.builtin" },
        ["@lsp.typemod.function.defaultLibrary"] = { link = "@function.builtin" },
        ["@lsp.typemod.operator.injected"] = { link = "@operator" },
        ["@lsp.typemod.string.injected"] = { link = "@string" },
        ["@lsp.typemod.variable.defaultLibrary"] = { link = "@variable.builtin" },
        ["@lsp.typemod.variable.injected"] = { link = "@variable" },

        -- telescope.nvim: https://github.com/nvim-telescope/telescope.nvim
        TelescopeMatching = { fg = p.color2 },
        TelescopeSelection = { fg = p.color2, bg = p.bg4 },
        TelescopeMultiSelection = { bg = p.color16 },
        TelescopePromptTitle = { fg = p.bg, bg = p.color15 },
        TelescopePreviewLine = { bg = p.bg },
        TelescopePromptPrefix = { fg = p.color15, bg = p.bg4 },
        TelescopePromptBorder = { fg = p.bg4, bg = p.bg4 },
        TelescopePromptNormal = { fg = p.fg, bg = p.bg4 },
        TelescopeResultsTitle = { fg = p.bg, bg = p.color16 },
        TelescopeResultsBorder = { fg = p.bg3, bg = p.bg3 },
        TelescopeResultsNormal = { fg = p.foreground, bg = p.bg3 },
        TelescopePreviewTitle = { fg = p.bg, bg = p.color14 },
        TelescopePreviewBorder = { fg = p.bg5, bg = p.bg5 },
        TelescopePreviewNormal = { fg = p.foreground, bg = p.bg5 },
    }

    -- Set the highlights
    for group, colors in pairs(highlights) do
        if colors.style then
            if type(colors.style) == "table" then
                colors = vim.tbl_extend("force", colors, colors.style)
            end
            colors.style = nil
        end
        vim.api.nvim_set_hl(0, group, colors)
    end
end

theme_setup()
